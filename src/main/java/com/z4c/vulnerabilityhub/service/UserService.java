package com.z4c.vulnerabilityhub.service;

import com.z4c.vulnerabilityhub.globalException.GlobalException;
import com.z4c.vulnerabilityhub.mapper.UserMapper;
import com.z4c.vulnerabilityhub.model.ResponseCode;
import com.z4c.vulnerabilityhub.model.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;
import java.util.regex.Pattern;

@Service
public class UserService {

    @Autowired
    UserMapper userMapper;

    public List<User> selectUsersByUsernameLike(String param) {
        return userMapper.selectUsersByUsernameLike(param);
    }

    public List<String> unionQuery(String ip) {
        return userMapper.selectUsernameByIP(ip);
    }

    public List<User> safeSelectUsersByUsernameLike(String username) {
        if(!isValidateParam(username)){
            throw new GlobalException(ResponseCode.FORBIDDEN);
        }
        return userMapper.selectUsersByUsernameLike(username);
    }

    public List<User> getAll() {
        return userMapper.getAll();
    }

    private boolean isValidateParam(String username) {
        Pattern compile = Pattern.compile("[0-9a-zA-Z]*");
        return compile.matcher(username).matches();
    }

    public List<User> selectUserListByCondition(User user){
        return userMapper.selectUserListByCondition(user);
    }

    public boolean updateUser(User user) {
        try{
            userMapper.updateUser(user);
        }catch (Exception e){
            e.printStackTrace();
            return false;
        }
        return true;
    }

}
