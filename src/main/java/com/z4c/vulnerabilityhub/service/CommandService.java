package com.z4c.vulnerabilityhub.service;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

@Service
public class CommandService {

    public String execCommand(String host) throws Exception {
        Process process;
        BufferedReader reader;
        if (System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("win")) {
            process = Runtime.getRuntime().exec(new String[]{"cmd.exe", "/c", "ping " + host});
            reader = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
        } else {
            process = Runtime.getRuntime().exec(new String[]{"/bin/sh", "-c", "ping -c 1 " + host});
            reader = new BufferedReader(new InputStreamReader(process.getInputStream(), StandardCharsets.UTF_8));
        }

        String line;
        StringBuilder stringBuilder = new StringBuilder();
        while ((line = reader.readLine()) != null) {
            stringBuilder.append(line).append("\n");
            System.out.println(line);
        }

        reader.close();

        reader = new BufferedReader(new InputStreamReader(process.getErrorStream(), StandardCharsets.UTF_8));
        while ((line = reader.readLine()) != null) {
            stringBuilder.append(line).append("\n");
            System.out.println(line);
        }

        reader.close();

        int exitCode = process.waitFor();
        if (exitCode == 0) {
            return host + " 可访问\n" ;
        }
        return host + " 无法访问\n" ;
    }

    public String safeExecCommand(String host) throws Exception {
        Process process;
        BufferedReader reader;
        if (System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("win")) {
            process = Runtime.getRuntime().exec("ping " + host);
            reader = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
        } else {
            process = Runtime.getRuntime().exec("ping -c 1 " + host);
            reader = new BufferedReader(new InputStreamReader(process.getInputStream(), StandardCharsets.UTF_8));
        }

        String line;
        StringBuilder stringBuilder = new StringBuilder();
        while ((line = reader.readLine()) != null) {
            stringBuilder.append(line).append("\n");
            System.out.println(line);
        }

        reader.close();

        reader = new BufferedReader(new InputStreamReader(process.getErrorStream(), StandardCharsets.UTF_8));
        while ((line = reader.readLine()) != null) {
            //stringBuilder.append(line).append("\n");
            System.out.println(line);
        }

        reader.close();

        int exitCode = process.waitFor();
        if (exitCode == 0) {
            return host + " 可访问";
        }
        return host + " 无法访问";
    }


}
