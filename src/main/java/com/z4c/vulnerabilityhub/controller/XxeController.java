package com.z4c.vulnerabilityhub.controller;

import com.z4c.vulnerabilityhub.model.Book;
import com.z4c.vulnerabilityhub.service.XmlParserService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.servlet.http.HttpServletRequest;
import java.io.IOException;
import java.util.List;

@Controller
@RequestMapping("/xxe")
@Api(tags = "XML外部实体注入(XXE)")
public class XxeController {
    @Autowired
    XmlParserService xmlParserService;

    @ApiOperation(value = "XML文档解析",notes = "")
    @PostMapping("/xml/parse")
    @ResponseBody
    public List<Book> parseXML(@ApiParam(value = "上传xml", required = true) @RequestPart("file") MultipartFile file) throws IOException {
        return xmlParserService.parseXmlDocument(file.getInputStream());
    }

    @ApiOperation(value = "XML文档解析-禁用外部实体",notes = "")
    @PostMapping("/xml/parse/fix")
    @ResponseBody
    public List<Book> fixParseXML(@ApiParam(value = "上传xml", required = true) @RequestPart("file") MultipartFile file) throws IOException {
        return xmlParserService.fixParseXmlDocument(file.getInputStream());
    }
}
