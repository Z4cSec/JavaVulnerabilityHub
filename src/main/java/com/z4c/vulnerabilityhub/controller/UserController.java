package com.z4c.vulnerabilityhub.controller;

import com.z4c.vulnerabilityhub.model.User;
import com.z4c.vulnerabilityhub.service.UserService;
import com.z4c.vulnerabilityhub.utils.RandomUtils;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import springfox.documentation.annotations.ApiIgnore;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Controller()
@ApiIgnore
@RequestMapping("/user")
public class UserController {

    @Autowired
    private UserService userService;

    @Autowired
    private RandomUtils randomUtils;

    @GetMapping("/register")
    public String register(){
        return "register";
    }

    @GetMapping("/list")
    public String listPage(){
        return "user/list";
    }

    @GetMapping("/getAll")
    public ResponseEntity<HashMap<String, Object>> getAll(){
        List<User> users = userService.getAll();
        HashMap<String, Object> resultMap = new HashMap<>();
        resultMap.put("code", 0);
        resultMap.put("msg", "");
        resultMap.put("count", users.size());
        resultMap.put("data", users);
        return ResponseEntity.ok(resultMap);
    }

    @PostMapping("/update")
    public ResponseEntity<Map<String,Object>> update(User user){
        HashMap<String, Object> resultMap = new HashMap<>();
        if(!userService.updateUser(user)){
            resultMap.put("code", 500);
            resultMap.put("msg", "服务器内部错误");
            return ResponseEntity.ok(resultMap);
        }
        resultMap.put("code", 0);
        resultMap.put("msg", "更新成功");
        return ResponseEntity.ok(resultMap);
    }

    @PostMapping("/phone/code")
    public ResponseEntity<HashMap<String, Object>> getCode(@RequestParam("phone") String phone){
        int code = randomUtils.randomCode();
        HashMap<String, Object> result = new HashMap<>();
        result.put("code",code);
        return ResponseEntity.ok(result);
    }

}
