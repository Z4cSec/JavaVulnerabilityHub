package com.z4c.vulnerabilityhub.globalException;

import com.z4c.vulnerabilityhub.model.ResponseCode;
import org.apache.ibatis.exceptions.PersistenceException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.MissingServletRequestParameterException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.NoHandlerFoundException;
import javax.servlet.http.HttpServletRequest;


@ControllerAdvice
public class GlobalExceptionHandler {

    @ExceptionHandler(Exception.class)
    public ModelAndView handleException(Exception e) {
        ModelAndView modelAndView = new ModelAndView();
        e.printStackTrace();
        modelAndView.setViewName("errors/500");
        return modelAndView;
    }

    @ExceptionHandler(NoHandlerFoundException.class)
    public ModelAndView handleNotFoundError(HttpServletRequest request, Exception e) {
        ModelAndView mav = new ModelAndView();
        e.printStackTrace();
        mav.addObject("url", request.getRequestURL());
        mav.setViewName("errors/404");
        return mav;
    }

    @ExceptionHandler(GlobalException.class)
    public ResponseEntity<ResponseCode> handleUserNotFoundException(GlobalException ex) {
           return new ResponseEntity<>(ex.getErrorCode(), HttpStatus.valueOf(ex.getErrorCode().getCode()));
    }

    @ExceptionHandler(PersistenceException.class)
    public ResponseEntity<String> handleErrorSQLException(Exception e) {
        e.printStackTrace();
        return ResponseEntity.internalServerError().body(e.getMessage());
    }

    @ExceptionHandler(MissingServletRequestParameterException.class)
    public ResponseEntity<String> handleMissingParameterException(Exception e) {
        e.printStackTrace();
        return ResponseEntity.badRequest().body("参数错误");
    }

}